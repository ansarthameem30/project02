{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ansar\\\\Desktop\\\\Hooks-a\\\\src\\\\Components\\\\usecontext\\\\usecontext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from \"react\";\n\n// Create a new context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\n\n// A component that provides the context\nconst ThemeProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [theme, setTheme] = useState(\"light\");\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === \"light\" ? \"dark\" : \"light\");\n  };\n\n  // Value prop defines the data shared within the context\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n// A component that consumes the context\n_s(ThemeProvider, \"1NR3O0/bzzhjlLyt740h+JhxH9c=\");\n_c = ThemeProvider;\nconst ThemeToggle = () => {\n  _s2();\n  const {\n    theme,\n    toggleTheme\n  } = useContext(ThemeContext);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: toggleTheme,\n    children: [\"Switch to \", theme === \"light\" ? \"dark\" : \"light\", \" theme\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeToggle, \"EFRZgBTSn7R64yv9sbxwgPkwfJQ=\");\n_c2 = ThemeToggle;\nconst Data = () => {\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Theme Switcher\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThemeToggle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Data;\nexport default Data;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ThemeProvider\");\n$RefreshReg$(_c2, \"ThemeToggle\");\n$RefreshReg$(_c3, \"Data\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","_ref","_s","children","theme","setTheme","toggleTheme","prevTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","ThemeToggle","_s2","onClick","_c2","Data","_c3","$RefreshReg$"],"sources":["C:/Users/Ansar/Desktop/Hooks-a/src/Components/usecontext/usecontext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\n\r\n// Create a new context\r\nconst ThemeContext = createContext();\r\n\r\n// A component that provides the context\r\nconst ThemeProvider = ({ children }) => {\r\n  const [theme, setTheme] = useState(\"light\");\r\n\r\n  const toggleTheme = () => {\r\n    setTheme((prevTheme) => (prevTheme === \"light\" ? \"dark\" : \"light\"));\r\n  };\r\n\r\n  // Value prop defines the data shared within the context\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\n// A component that consumes the context\r\nconst ThemeToggle = () => {\r\n  const { theme, toggleTheme } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <button onClick={toggleTheme}>\r\n      Switch to {theme === \"light\" ? \"dark\" : \"light\"} theme\r\n    </button>\r\n  );\r\n};\r\n\r\nconst Data = () => {\r\n  return (\r\n    <ThemeProvider>\r\n      <div>\r\n        <h1>Theme Switcher</h1>\r\n        <ThemeToggle />\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Data;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;;AAEpC;AACA,MAAMM,aAAa,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACjC,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC;EAE3C,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxBD,QAAQ,CAAEE,SAAS,IAAMA,SAAS,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EACrE,CAAC;;EAED;EACA,oBACET,OAAA,CAACC,YAAY,CAACS,QAAQ;IAACC,KAAK,EAAE;MAAEL,KAAK;MAAEE;IAAY,CAAE;IAAAH,QAAA,EAClDA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;;AAED;AAAAX,EAAA,CAfMF,aAAa;AAAAc,EAAA,GAAbd,aAAa;AAgBnB,MAAMe,WAAW,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACxB,MAAM;IAAEZ,KAAK;IAAEE;EAAY,CAAC,GAAGX,UAAU,CAACI,YAAY,CAAC;EAEvD,oBACED,OAAA;IAAQmB,OAAO,EAAEX,WAAY;IAAAH,QAAA,GAAC,YAClB,EAACC,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,EAAC,QAClD;EAAA;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb,CAAC;AAACG,GAAA,CARID,WAAW;AAAAG,GAAA,GAAXH,WAAW;AAUjB,MAAMI,IAAI,GAAGA,CAAA,KAAM;EACjB,oBACErB,OAAA,CAACE,aAAa;IAAAG,QAAA,eACZL,OAAA;MAAAK,QAAA,gBACEL,OAAA;QAAAK,QAAA,EAAI;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBf,OAAA,CAACiB,WAAW;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEpB,CAAC;AAACO,GAAA,GATID,IAAI;AAWV,eAAeA,IAAI;AAAC,IAAAL,EAAA,EAAAI,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}